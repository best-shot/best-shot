function getKeys(object) {
  var keys = [];

  var jsonString = JSON.stringify(object);
  var keyValues = jsonString.slice(1, -1).split(',');

  keyValues.forEach(function forEach(keyValue) {
    var parts = keyValue.split(':');

    var key = parts[0].replace(getRegExp('^"|"$', 'g'), '');
    var value = parts[1] ? JSON.parse(parts[1]) : false;
    if (value) {
      keys.push(key);
    }
  });

  return keys;
}

function toVal(mix) {
  var str = '';

  if (typeof mix === 'string' || typeof mix === 'number') {
    str += mix;
  } else if (typeof mix === 'object' && mix !== null) {
    if (mix.constructor === 'Array') {
      var len = mix.length;
      for (var k = 0; k < len; k++) {
        if (mix[k]) {
          var y = toVal(mix[k]);
          if (y) {
            if (str) {
              str += ' ';
            }
            str += y;
          }
        }
      }
    } else {
      var clx = getKeys(mix).join(' ');
      if (clx) {
        if (str) {
          str += ' ';
        }
        str += clx;
      }
    }
  }

  return str;
}

function clsx() {
  var tmp;
  var x;
  var str = '';
  var len = arguments.length;
  for (var i = 0; i < len; i++) {
    tmp = arguments[i];
    if (tmp) {
      x = toVal(tmp);
      if (x) {
        if (str) {
          str += ' ';
        }
        str += x;
      }
    }
  }
  return str;
}

module.exports = { clsx: clsx };
